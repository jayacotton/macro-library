	macro	packfd
%lab	packfd	%name
	gblb	%gen
	aif	('%name' neq '')&hasname
	mnote	"must have a file name to pack"
	mexit
&hasname anop
	aif	('%lab' eq '')&nolab
%lab	equ	$
&nolab	anop
;
; hl = fcb
; %name is the file name to pack into the fcb
;
	lxi	d,c$sysin
	call	packfn
	jmp	x$sysin
c$sysin	db	%name
	db	0
m$sysin	dw	c$sysin
	aif	(%gen)&done
%gen	setb	1
;
; pack file descriptor done here
;
packfn	equ	$
	xchg
	shld	m$sysin	; save the name string pointer
	xchg
;
; so we need to deconstruct the file name string and put the
; parts into the correct places in the file control block.
; also need to prep the storage with spaces the make clean
; file names.
; 
	push	h	; hl points to the fcb
	inx	h	; bump past the drive nr.
	mvi	a,' '
	mvi	b,8+3	; file name and extension
	call	memset	; fill fcb name space with ' '
	pop	h
; 
; if the file name byte 2 is a ':' then we need to fiddle with the 
; drive number
; 
	mvi	m,0
;
	xchg
	lhld	m$sysin
	inx	h
	mov	a,m
	xchg
	cpi	':'
;
	xchg
	lhld	m$sysin
	xchg
;
	jnz	n$sysin
;
; mess with drive here
;	
	xchg
	lhld	m$sysin
	mov	a,m
	xchg
;
	sbi	'A'	; bug here.  there may be upper case
	inr	a
	mov	m,a
	xchg
	lhld	m$sysin
	inx	h
	inx	h
	xchg
;
; 
;  work on file name here
;
n$sysin	equ	$
	push	h	; save start of fcb
	inx	h	; skip drive number
	mvi	b,9	; upto 8 bytes
	mvi	c,'.'	; stop at .
	call	strcpy	; copy
	pop	h	; get fcb back
	lxi	b,9	; up to file extension
	dad	b	
	inx	d	; get past the .
	mvi	b,4	; upto 3 bytes
	mvi	c,0	; stop at null
	call	strcpy	; copy
	lxi	d,20
	dad	d
	mov	m,a
	inx	h
	mov	m,a
	inx	h
	mov	m,a
	inx	h
	mov	m,a
	ret 
&done	anop
x$sysin	equ	$
	mend
