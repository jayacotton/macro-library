;
; fputc sets the dma address to a local data buffer,
; on return it resets it to the default address.
;
; this is a very ugly thing, but CP/M only has 1 data 
; buffer, and you can't read and write via only one.
;
; hl = fcb
; de = buf
; bc = def
; a = char

	macro	fputc
%lab	fputc	%fcb,%buf,%def,%ddrive,%char
	gblb	%fputc
	aif	('%lab' eq '')&nolab
%lab	equ	$
&nolab	anop
	aif	('%char' eq '')&noreg
	mvi	a,%char
&noreg	anop
	aif	('%fcb' eq '')&nohl
	lxi	h,%fcb
&nohl	anop
	aif	('%buf' eq '')&node
	lxi	d,%buf
&node	anop
	aif	('%def' eq '')&nobc
	lxi	b,%def
&nobc	anop
	push	psw
	lda	%ddrive
	call	fputc
	aif	(%fputc)&done
%fputc	setb	1
	jmp	x$sysin
fputc	equ	$	
;
; to all the work here
;
;   store all the pointers.
;
	sta	m$sysin
	shld	f$sysin	; save fcb
; rebalance stack
	pop	hl	; return address
	pop	psw
	push	hl	; return address
	sta	a$sysin
	xchg	
	shld	b$sysin	; save working dma buffer
	push	b
	pop	h
	shld	d$sysin	; save default dma buffer
; Start work here
;	 buff[index] = a;
	lhld	b$sysin ; get buff addr
	lda	c$sysin	; get index
	mov	e,a	; compute index to store byte
	mvi	d,0
	dad	d
	lda	a$sysin
	mov	m,a	; stuff it in memory
;        index++;
	lda	c$sysin
	inr	a
	sta	c$sysin
;        if(index >127) {
	cpi	128	; max buff ?
	rnz	
; get the current drive
	mvi	c,25
	call	bdos
	sta	n$sysin
; set to default drive
	lda	m$sysin
	mvi	c,14
	mov	e,a
	call	bdos
;                setdma to buff;
	lhld	b$sysin 
	xchg		; new dma buffer to de.
	mvi	c,26
	call	bdos
;                write buffer to disk
	lhld	f$sysin
	xchg
	mvi	c,21
	call	bdos
	sta	errno
	mvi	c,21
	inr	a
	cz	fmerr
;                memset buffer to 1Ah
	lhld	b$sysin
	mvi	a,01ah
	mvi	b,128
	call	memset
;                index = 0;
	mvi	a,0
	sta	c$sysin
;                setdma to default;
	lhld	d$sysin
	xchg
	mvi	c,26
	call	bdos
; set back to current drive
	lda	n$sysin
	mvi	c,14
	mov	e,a
	call	bdos
;        }
	ret
a$sysin	db	0	; character storage
f$sysin	dw	0	; fcb pointer
b$sysin	dw	0	; buffer pointer
c$sysin	db	0	; byte count for output pointer.
			; note: this is a source of bugs.
d$sysin	dw	0	; default pointer
m$sysin	db	0	; my drive (where the file is)
n$sysin	db	0	; current drive.
x$sysin	equ	$
&done	anop
	mend	

